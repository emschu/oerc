name: OERC

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  check-license-eye:
    name: Default integration check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
        python-version: [ 3.8 ]

    services:
      postgres:
        image: postgres:12.3
        env:
          POSTGRES_PASSWORD: root
          POSTGRES_DB: oer_server_dev
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Caching...
        uses: actions/cache@v1
        with:
          path: |
            ~/.npm
            ~/.cache/pip
            client/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cache-oerc

      - name: Build Codebase
        run: make install

      - name: npm install and npm run build
        run: |
          cd client
          npm ci

      - name: Build Codebase
        run: make build

      - name: Lint Codebase
        run: make lint

      - name: Test
        run: make test