{
  "openapi": "3.1.0",
  "info": {
    "contact": {
      "email": "look@github.com",
      "name": "emschu",
      "url": "https://github.com/emschu/oerc"
    },
    "description": "This API provides access to the oerc database.\n\n## API Features\n\n- **CORS Support**: All API endpoints support Cross-Origin Resource Sharing (CORS). The Access-Control-Allow-Origin header is configurable via the AccessControlAllowOrigin setting in .oerc.yaml.\n\n- **GZIP Compression**: All API responses support GZIP compression to reduce bandwidth usage. Clients should be prepared to handle compressed responses.\n\n- **Caching**: Specific endpoints (/program/*, /channel/*, and /log/*) include Cache-Control headers with a default max-age of 36000 seconds (10 hours) to improve performance for browser clients.\n",
    "license": {
      "name": "AGPL",
      "url": "http://www.gnu.org/licenses/agpl-3.0.de.html"
    },
    "title": "oerc-api",
    "version": "v2.2"
  },
  "servers": [
    {
      "description": "Ipv4 localhost server",
      "url": "http://127.0.0.1:8080/api/v2"
    },
    {
      "description": "IPv6 localhost server",
      "url": "http://[::]:8080/api/v2"
    }
  ],
  "paths": {
    "/ping": {
      "get": {
        "operationId": "pingGET",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/status": {
      "get": {
        "operationId": "statusGET",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            },
            "description": "OK"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 message"
          }
        }
      }
    },
    "/channels": {
      "get": {
        "operationId": "channelsGET",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              }
            },
            "description": "get all channels"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 message"
          }
        },
        "x-response-headers": {
          "Cache-Control": {
            "$ref": "#/components/headers/CacheControlHeader"
          }
        }
      }
    },
    "/channel/{channel_id}": {
      "get": {
        "operationId": "singleChannelGET",
        "parameters": [
          {
            "description": "channel id",
            "in": "path",
            "name": "channel_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Channel"
                }
              }
            },
            "description": "get a single channel"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "invalid id"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "channel not found"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 message"
          }
        },
        "x-response-headers": {
          "Cache-Control": {
            "$ref": "#/components/headers/CacheControlHeader"
          }
        }
      }
    },
    "/program": {
      "get": {
        "operationId": "programGET",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "channel_id must be valid or empty, 0 = all",
            "in": "query",
            "name": "channel_id",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "allowEmptyValue": false,
            "description": "from, RFC3339 format",
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "style": "form"
          },
          {
            "allowEmptyValue": false,
            "description": "to, RFC3339 format",
            "in": "query",
            "name": "to",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramResponse"
                }
              }
            },
            "description": "Program"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Channel id does not exist"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 message"
          }
        },
        "x-response-headers": {
          "Cache-Control": {
            "$ref": "#/components/headers/CacheControlHeader"
          }
        }
      }
    },
    "/program/daily/{channel_id}": {
      "get": {
        "operationId": "programDailyByChannelGET",
        "parameters": [
          {
            "description": "channel_id",
            "in": "path",
            "name": "channel_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramResponse"
                }
              }
            },
            "description": "get daily program by channel"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "invalid channel id"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "channel not found"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 message"
          }
        },
        "x-response-headers": {
          "Cache-Control": {
            "$ref": "#/components/headers/CacheControlHeader"
          }
        }
      }
    },
    "/program/daily": {
      "get": {
        "operationId": "programDailyGET",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramResponse"
                }
              }
            },
            "description": "get daily program"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 message"
          }
        },
        "x-response-headers": {
          "Cache-Control": {
            "$ref": "#/components/headers/CacheControlHeader"
          }
        }
      }
    },
    "/program/tomorrow/{channel_id}": {
      "get": {
        "operationId": "programTomorrowByChannelGET",
        "parameters": [
          {
            "description": "channel_id",
            "in": "path",
            "name": "channel_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramResponse"
                }
              }
            },
            "description": "get daily program"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "invalid channel id"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "channel not found"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 message"
          }
        },
        "x-response-headers": {
          "Cache-Control": {
            "$ref": "#/components/headers/CacheControlHeader"
          }
        }
      }
    },
    "/program/tomorrow": {
      "get": {
        "operationId": "programTomorrowGET",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramResponse"
                }
              }
            },
            "description": "get daily program"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 message"
          }
        },
        "x-response-headers": {
          "Cache-Control": {
            "$ref": "#/components/headers/CacheControlHeader"
          }
        }
      }
    },
    "/program/yesterday/{channel_id}": {
      "get": {
        "operationId": "programYesterdayByChannelGET",
        "parameters": [
          {
            "description": "channel_id",
            "in": "path",
            "name": "channel_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramResponse"
                }
              }
            },
            "description": "get daily program"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "invalid channel id"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "channel not found"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 message"
          }
        },
        "x-response-headers": {
          "Cache-Control": {
            "$ref": "#/components/headers/CacheControlHeader"
          }
        }
      }
    },
    "/program/yesterday": {
      "get": {
        "operationId": "programYesterdayGET",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramResponse"
                }
              }
            },
            "description": "get daily program"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 message"
          }
        },
        "x-response-headers": {
          "Cache-Control": {
            "$ref": "#/components/headers/CacheControlHeader"
          }
        }
      }
    },
    "/program/entry/{id}": {
      "get": {
        "operationId": "ProgramEntryByIdGET",
        "parameters": [
          {
            "description": "program entry id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramEntry"
                }
              }
            },
            "description": "Get Program Entry by ID"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Program Entry not found"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 message"
          }
        },
        "x-response-headers": {
          "Cache-Control": {
            "$ref": "#/components/headers/CacheControlHeader"
          }
        }
      }
    },
    "/log": {
      "get": {
        "operationId": "logGET",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogEntryResponse"
                }
              }
            },
            "description": "Get log entries"
          }
        },
        "x-response-headers": {
          "Cache-Control": {
            "$ref": "#/components/headers/CacheControlHeader"
          }
        }
      }
    },
    "/log/entry/{id}": {
      "delete": {
        "operationId": "singleLogDELETE",
        "parameters": [
          {
            "description": "delete a single log entry",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "log entry cleared"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "log entry not found"
          }
        }
      },
      "get": {
        "operationId": "singleLogGET",
        "parameters": [
          {
            "description": "log entry id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogEntry"
                }
              }
            },
            "description": "get a single log entry"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "log entry not found"
          }
        },
        "x-response-headers": {
          "Cache-Control": {
            "$ref": "#/components/headers/CacheControlHeader"
          }
        }
      }
    },
    "/log/clear": {
      "delete": {
        "operationId": "logClearAllDELETE",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK all cleared"
          }
        }
      }
    },
    "/recommendations": {
      "get": {
        "operationId": "recommendationsGET",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "from, RFC3339 format, default start of today, utc is expected serverside",
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Recommendation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "get recommendations in given time range"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error, bad request, a query string must be provided"
          }
        }
      }
    },
    "/search": {
      "get": {
        "operationId": "searchGET",
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "query string",
            "in": "query",
            "name": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "allowEmptyValue": true,
            "description": "result limit, default is 250",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "uint64",
              "type": "integer"
            },
            "style": "form"
          },
          {
            "allowEmptyValue": true,
            "description": "result offset, useful for result pagination, default is 0",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "uint64",
              "type": "integer"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ProgramEntry"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK query"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error, bad request, a query string must be provided"
          }
        }
      }
    },
    "/xmltv": {
      "get": {
        "description": "Endpoint for XMLTV data",
        "operationId": "xmltv",
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "from timestamp",
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "style": "form"
          },
          {
            "allowEmptyValue": false,
            "description": "from timestamp",
            "in": "query",
            "name": "to",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful XMLTV response"
          },
          "400": {
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "invalid request"
          }
        }
      }
    }
  },
  "components": {
    "headers": {
      "CORSHeader": {
        "description": "Access-Control-Allow-Origin header for CORS support",
        "schema": {
          "example": "*",
          "type": "string"
        }
      },
      "CompressionHeader": {
        "description": "Content-Encoding header for GZIP compression",
        "schema": {
          "example": "gzip",
          "type": "string"
        }
      },
      "CacheControlHeader": {
        "description": "Cache-Control header for browser caching (used for /program, /log, and /channel endpoints)",
        "schema": {
          "example": "public, max-age=36000",
          "type": "string"
        }
      }
    },
    "schemas": {
      "StatusResponse": {
        "properties": {
          "channel_family_count": {
            "format": "int64",
            "type": "integer"
          },
          "channel_count": {
            "format": "int64",
            "type": "integer"
          },
          "program_entry_count": {
            "format": "int64",
            "type": "integer"
          },
          "tv_show_count": {
            "format": "int64",
            "type": "integer"
          },
          "image_links_count": {
            "format": "int64",
            "type": "integer"
          },
          "log_count": {
            "format": "int64",
            "type": "integer"
          },
          "recommendation_count": {
            "format": "int64",
            "type": "integer"
          },
          "version": {
            "type": "string"
          },
          "server_date_time": {
            "type": "string"
          },
          "data_start_time": {
            "type": "string"
          },
          "data_end_time": {
            "type": "string"
          },
          "tv_channels": {
            "items": {
              "$ref": "#/components/schemas/Channel"
            },
            "type": "array"
          },
          "tv_channel_families": {
            "items": {
              "$ref": "#/components/schemas/ChannelFamily"
            },
            "type": "array"
          }
        },
        "title": "StatusResponse",
        "type": "object"
      },
      "ChannelResponse": {
        "properties": {
          "size": {
            "format": "int64",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/Channel"
            },
            "type": "array"
          }
        },
        "title": "ChannelResponse",
        "type": "object"
      },
      "ProgramResponse": {
        "properties": {
          "size": {
            "format": "int64",
            "type": "integer"
          },
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "channel_id": {
            "format": "int64",
            "type": "integer"
          },
          "program_list": {
            "items": {
              "$ref": "#/components/schemas/ProgramEntry"
            },
            "type": "array"
          }
        },
        "required": [
          "from",
          "program_list",
          "size",
          "to"
        ],
        "title": "ProgramResponse",
        "type": "object"
      },
      "Error": {
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "title": "Error",
        "type": "object"
      },
      "ChannelFamily": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "title": {
            "type": "string"
          }
        },
        "title": "ChannelFamily",
        "type": "object"
      },
      "Channel": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "technical_id": {
            "type": "string"
          },
          "homepage": {
            "type": "string"
          },
          "channel_family_id": {
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "Channel",
        "type": "object"
      },
      "ImageLink": {
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "url": {
            "type": "string"
          }
        },
        "title": "ImageLink",
        "type": "object"
      },
      "ProgramEntry": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "channel_family_id": {
            "format": "int64",
            "type": "integer"
          },
          "channel_id": {
            "format": "int64",
            "type": "integer"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "duration_in_minutes": {
            "format": "int32",
            "type": "integer"
          },
          "end_date_time": {
            "type": "string"
          },
          "start_date_time": {
            "type": "string"
          },
          "last_check": {
            "type": "string"
          },
          "homepage": {
            "type": "string"
          },
          "image_links": {
            "items": {
              "$ref": "#/components/schemas/ImageLink"
            },
            "type": ["array", "null"]
          },
          "tags": {
            "type": "string"
          },
          "technical_id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "is_deprecated": {
            "type": "boolean"
          },
          "collision_entries": {
            "items": {
              "$ref": "#/components/schemas/ProgramEntry"
            },
            "type": ["array", "null"]
          }
        },
        "title": "ProgramEntry",
        "type": "object"
      },
      "PingResponse": {
        "properties": {
          "data": {
            "type": "string"
          },
          "date": {
            "type": "string"
          }
        },
        "title": "PingResponse",
        "type": "object"
      },
      "LogEntry": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "title": "LogEntry",
        "type": "object"
      },
      "LogEntryResponse": {
        "properties": {
          "size": {
            "format": "int64",
            "type": "integer"
          },
          "page": {
            "format": "int64",
            "type": "integer"
          },
          "page_count": {
            "format": "int64",
            "type": "integer"
          },
          "entry_count": {
            "format": "int64",
            "type": "integer"
          },
          "elements": {
            "items": {
              "$ref": "#/components/schemas/LogEntry"
            },
            "type": "array"
          }
        },
        "title": "LogEntryResponse",
        "type": "object"
      },
      "Recommendation": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "keywords": {
            "type": "string"
          },
          "start_date_time": {
            "type": "string"
          },
          "program_entry": {
            "$ref": "#/components/schemas/ProgramEntry"
          }
        },
        "title": "Recommendation",
        "type": "object"
      }
    }
  }
}